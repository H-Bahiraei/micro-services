version: '2.1'
services:
  mariadb:
    image: mariadb:latest
    container_name: mariadb
    ports:
      - "3366:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password
    #    restart: always
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: "/etc/init.d/mysql status"
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:latest
    container_name: redis
    #    restart: always
    ports:
      - 6379:6379
    command: redis-server --requirepass Mani3280@ --loglevel warning
#        command: redis-server --save 60 1 --requirepass MDNcVb924a --loglevel warning
    #    volumes:
    #      - cache:/data
    networks:
      backend:
        aliases:
          - "redisserver"
#  elasticsearch:
#    container_name: es-container
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.2
#    environment:
#      - xpack.security.enabled=false
#      - "discovery.type=single-node"
#    volumes:
#      - elasticsearch-data:/usr/share/elasticsearch/data
#    networks:
#      backend:
#        aliases:
#           - es-net
#    ports:
#      - 9200:9200
#  kibana:
#    container_name: kb-container
#    image: docker.elastic.co/kibana/kibana:7.17.2
#    environment:
#      - ELASTICSEARCH_HOSTS=http://es-container:9200
#    networks:
#      backend:
#        aliases:
#           - es-net-kibana
#    depends_on:
#      - elasticsearch
#    ports:
#      - 5601:5601
  keycloak:
    image: jboss/keycloak
    container_name: keycloak
    #    restart: always
    environment:
      DB_VENDOR: mariadb
      DB_ADDR: mariadb
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password

      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
    ports:
      - "8090:8080"
    networks:
      backend:
        aliases:
          - "keycloak"
    depends_on:
      - mariadb
  eurekaserver:
    image: picher/eurekaserver:0.0.1-SNAPSHOT
    container_name: eurekaserver
    ports:
      - "8761:8761"
    networks:
      backend:
        aliases:
          - "eurekaserver"

#  otpservice:
#    image: picher/otp-service:0.0.1-SNAPSHOT
#    environment:
#      PROFILE: "dev"
#      SPRING_PROFILES_ACTIVE: "dev"
#    ports:
#      - "8080:8080"
#    networks:
#      - backend

  notification-service:
    image: picher/notification-service:0.0.1-SNAPSHOT
    container_name: notification-service
    environment:
      PROFILE: "dev"
      SPRING_PROFILES_ACTIVE: "dev"
    ports:
      - "8082:8082"
    depends_on:
      - eurekaserver
    networks:
      backend:
        aliases:
          - "notification-service"

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    container_name: prometheus
    networks:
      backend:
        aliases:
          - "prometheus"
  grafana:
    image: "grafana/grafana:latest"
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
    networks:
      backend:
        aliases:
          - "grafana"
#  zipkin:
#    image: openzipkin/zipkin
#    container_name: zipkin
#    depends_on:
#      - elasticsearch
#    environment:
#      - STORAGE_TYPE=elasticsearch
#      - "ES_HOSTS=elasticsearch:9300"
#    ports:
#      - "9411:9411"
#    networks:
#      backend:
#        aliases:
#          - "zipkin"

networks:
  backend:
    driver: bridge
#  es-net:
#    driver: bridge
volumes:
  cache:
    driver: local
  mariadb_data:
    driver: local
  elasticsearch-data:
    driver: local